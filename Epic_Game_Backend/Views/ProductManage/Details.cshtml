@model Epic_Game_Backend.ViewModels.ProductDetailsViewModel

@section topCSS{
    <link href="~/Assets/css/ProductDetails/ProductDetails.css" rel="stylesheet" />
}

<div class="productDerails-root">
    <div class="productDerails-data">
        <div class="pd-data-header">
            <div class="pd-d-header-title">
                <h3>ProductDetails</h3>
                <hr />
                <p>
                    Here you can see information about this product
                </p>
            </div>
            <div style="width: 135px">
                <div style="padding-bottom: calc(4/3 * 100%); position: relative">
                    <div class="imgArea" style="background-image: url('@Html.DisplayFor(model => model._detailtext.Img_Url)');position: absolute; top: 0; height: 100%; width: 100%; background-size: auto 100%; background-repeat: no-repeat; background-position: bottom;"></div>
                </div>
            </div>
        </div>

        <hr />

        <div class="pd-data-input">
            <div class="pd-d-input-item">
                <dl class="dl-horizontal">

                    <dt>
                        @Html.DisplayNameFor(model => model._detailtext.ProductId)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model._detailtext.ProductId)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model._detailtext.ProductName)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model._detailtext.ProductName)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model._detailtext.Developer)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model._detailtext.Developer)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model._detailtext.Publisher)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model._detailtext.Publisher)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model._detailtext.ReleaseDate)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model._detailtext.ReleaseDate)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model._detailtext.sales_volume)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model._detailtext.sales_volume)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model._detailtext.total_income)
                    </dt>

                    <dd>
                        NTD : @Html.DisplayFor(model => model._detailtext.total_income)
                    </dd>

                </dl>
                <p>
                    @Html.ActionLink("Edit", "Edit", new { id = Model._detailtext.ProductId }) |
                    @Html.ActionLink("Back to List", "Index")
                </p>
            </div>
            <div class="pd-d-input-chart">
                <canvas id="sales_chart" width="400" height="400"></canvas>
            </div>
        </div>
    </div>
</div>

@section endJS{
    <script>

        let month = new Array(12);
        month[0] = "January";
        month[1] = "February";
        month[2] = "March";
        month[3] = "April";
        month[4] = "May";
        month[5] = "June";
        month[6] = "July";
        month[7] = "August";
        month[8] = "September";
        month[9] = "October";
        month[10] = "November";
        month[11] = "December";

        let d = new Date();

        var ctx = document.getElementById("sales_chart");
        var chart = new Chart(ctx, {
            type: "line",
            data: {
                labels: @Html.Raw(Json.Encode(Model._chart_toarray.DaysOfMonth)),
                datasets: [{
                    label: "Product",
                    data: @Html.Raw(Json.Encode(Model._chart_toarray.CountOfDay)),
                    fill: false,
                    backgroundColor: 'rgba(255,165,0,0.3)',
                    borderColor: 'rgb(255,165,0)',
                    pointStyle: "circle",
                    pointBackgroundColor: 'rgb(0,255,0)',
                    pointRadius: 5,
                    pointHoverRadius: 10
                }]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    fontSize: 26,
                    text: `Total Sales In ${month[d.getMonth()]}`
                },
                tooltips: {
                    mode: 'point',
                    intersect: true
                },
                legend: {
                    position: 'bottom',
                    labels: {
                        fontColor: 'black'
                    }
                }
            }
        });
    </script>
}